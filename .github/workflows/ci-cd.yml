name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14
    - name: Install dependencies
      run: |
        cd frontend
        npm install
        npm ci
    - name: Run tests
      run: |
        cd frontend
        npm run test

  test-lambda:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        cd lambda
        pip install -r requirements.txt
        pip install pytest
    - name: Run tests
      env:
        AWS_DEFAULT_REGION: 'us-east-1'
        SAGEMAKER_ENDPOINT_NAME: 'mock-endpoint'
      run: |
        cd lambda
        pytest

  build-and-deploy-frontend:
    needs: [test, test-lambda]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14
    - name: Install dependencies
      run: |
        cd frontend
        npm install
        npm ci
    - name: Build
      run: |
        cd frontend
        echo 'REACT_APP_API_GATEWAY_ENDPOINT=${{ secrets.API_GATEWAY_ENDPOINT }}' > .env
        npm run build
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2
    - name: Deploy to S3
      run: |
        aws s3 sync frontend/build/ s3://${{ secrets.S3_BUCKET }} --delete


  deploy-lambda:
    needs: [test, test-lambda]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        cd lambda
        pip install -r requirements.txt -t .
    - name: Zip Lambda function
      run: |
        cd lambda
        zip -r ../lambda_function.zip .
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2
    - name: Deploy to Lambda
      run: |
        MAX_RETRIES=5
        RETRY_INTERVAL=10
        for i in $(seq 1 $MAX_RETRIES); do
          if aws lambda update-function-code --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} --zip-file fileb://lambda_function.zip; then
            echo "Lambda function updated successfully"
            break
          else
            if [ $i -eq $MAX_RETRIES ]; then
              echo "Failed to update Lambda function after $MAX_RETRIES attempts"
              exit 1
            fi
            echo "Update failed, retrying in $RETRY_INTERVAL seconds..."
            sleep $RETRY_INTERVAL
          fi
        done
    - name: Update Lambda configuration
      run: |
        MAX_RETRIES=5
        RETRY_INTERVAL=10
        for i in $(seq 1 $MAX_RETRIES); do
          if aws lambda update-function-configuration --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} --environment "Variables={SAGEMAKER_ENDPOINT_NAME=${{ secrets.SAGEMAKER_ENDPOINT_NAME }}}"; then
            echo "Lambda function configuration updated successfully"
            break
          else
            if [ $i -eq $MAX_RETRIES ]; then
              echo "Failed to update Lambda function configuration after $MAX_RETRIES attempts"
              exit 1
            fi
            echo "Update failed, retrying in $RETRY_INTERVAL seconds..."
            sleep $RETRY_INTERVAL
          fi
        done